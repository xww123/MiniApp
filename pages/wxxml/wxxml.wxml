<!--pages/wxxml/wxxml.wxml-->
<!-- 1.wxml的格式 -->
<!-- wxml区分大小写 -->

<!-- 2.Mustache -->
<view>{{ message }}</view>
<view>{{ firstname }} {{ lastname }}</view>
<view>{{ firstname + ' ' + lastname}}</view>
<view>{{ age>=18 ? '成年人' : '未成年人' }}</view>
<view>{{ nowTime }}</view>

<button size="mini" bindtap="handleSwitchColor">切换颜色</button>
<view class='box {{ isActive ? "active" : "" }}'>哈哈哈</view>

<map class="map" longitude="116.11" latitude="39.6"></map>

<view>-----------条件判断---------------</view>
<!-- wx:if的使用 -->
<button size="mini" bindtap="handleSwitchShow">切换显示</button>
<view wx:if="{{ isShow }}">哈哈哈\n</view>

<!-- wx:elif/wx:else -->
<button size="mini" bindtap="handleIncrement">分数递增6</button>
<view wx:if="{{ score >= 90 }}">优秀</view>
<view wx:elif="{{ score >= 80 }}">良好</view>
<view wx:elif="{{ score >= 60 }}">及格</view>
<view wx:else>不及格</view>


<!-- hidden属性 -->
<!-- 可以使用wx:if代替hidden属性 -->
<view wx:if="{{ false }}">我是wx:if代替hidden属性控制的内容1--隐藏</view>
<view wx:if="{{ true }}">我是wx:if代替hidden属性控制的内容2--显示</view>

<!-- hidden隐藏组件时，组件是存在的 -->
<view>---------------------</view>
<view hidden="{{ false }}">我是hidden属性控制的内容1--显示</view>
<view>我是hidden属性控制的内容2--显示</view>
<view hidden="{{ true }}">我是hidden属性控制的内容3--隐藏</view>
<!-- 
切换频率使用高的使用 hidden
切换频率使用低的使用 wx:if -->

<view>----------列表渲染-------------</view>
<!-- 1.wx:for的回顾 -->
<!-- 1.1遍历数组/字符串/数字 -->
<view wx:for="{{ [] }}"></view>
<!-- wx:for="['']" 是字符串 -->
<view wx:for="['']"></view>


<view wx:for="{{ ['abc','cba','nba'] }}">{{ item }} {{ index }}</view>
<view wx:for="codewhy">{{ item }} {{ index }}</view>
<view wx:for="{{ 9 }}">{{ item }}</view>

<!-- block不是组件，只用于包裹一组组件 -->
<block>
  <button>按钮</button>
  <view>呵呵呵</view>
  <text>我是内容</text>
</block>

<!-- 3.item\index起别名字 -->
<view wx:for="{{ movies }}" wx:for-item="movie" wx:for-index="i">{{ movie }} {{ i }}</view>

<block wx:for="{{ nums }}" wx:for-item="inner_nums">
  <block wx:for="{{ inner_nums }}">
    <view>{{ item }}</view>
  </block>
</block>

<!-- 4.key的作用 -->
<view class="container">
  <view wx:for="{{ letters }}" wx:key="{{ item }}">{{ item }}</view>
</view>

<view>---------template-------------</view>
<!-- 之前的时候小程序不支持自定义组件，为了进行代码的复用：template -->
<!-- 模板中包裹的内容，在没有被使用前，是不会进行任何的渲染 -->
<template name="contentItem">
  <button size="mini">{{ btnText }}</button>
  <view>{{ content }}</view>
</template>

<template is="contentItem" data="{{ btnText: '按钮', content: '哈哈哈' }}" />
<template is="contentItem" data="{{ btnText: '警告', content: '呵呵呵' }}" />
<template is="contentItem" data="{{ btnText: '点击', content: '嘿嘿嘿' }}" />
<template is="contentItem" data="{{ btnText: '登录', content: '嘻嘻嘻' }}" />
<template is="contentItem" data="{{ btnText: '注册', content: '来来来' }}" />

<import src="/wxml/template.wxml" />
<template is="contentColumn" data="{{ tempText: '引用注册按钮', content: '来来来' }}" />